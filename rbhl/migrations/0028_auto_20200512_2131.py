# Generated by Django 2.0.13 on 2020-05-12 21:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import opal.models


class Migration(migrations.Migration):

    dependencies = [
        ('opal', '0037_auto_20181114_1445'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('rbhl', '0027_diagnosis_diagnosis_type'),
    ]

    operations = [
        migrations.CreateModel(
            name='BronchialChallengeSubstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('system', models.CharField(blank=True, max_length=255, null=True)),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
                ('version', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DiagnosticTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('consistency_token', models.CharField(max_length=8)),
                ('provisional', models.BooleanField(default=False, help_text='True if the diagnosis is provisional. Defaults to False', verbose_name='Provisional?')),
                ('details', models.TextField(blank=True)),
                ('date_of_diagnosis', models.DateField(blank=True, null=True)),
                ('condition_ft', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('test_type', models.CharField(blank=True, choices=[('Skin prick test', 'Skin prick test'), ('Bronchial test', 'Bronchial test'), ('Routine SPT', 'Routine SPT'), ('Spirometry', 'Spirometry'), ('CT chest scan', 'CT chest scan'), ('Full lung function', 'Full lung function')], max_length=256, null=True)),
                ('test_date', models.DateField(blank=True, null=True)),
                ('specific_sp_testnum', models.IntegerField(blank=True, null=True, verbose_name='')),
                ('antihistimines', models.NullBooleanField()),
                ('immunology_oem', models.NullBooleanField(choices=[('Yes', 'Yes'), ('No', 'No'), ('Dermatographic', 'Dermatographic')], verbose_name='Immunology OEM')),
                ('specifc_skin_prick_test', models.NullBooleanField()),
                ('atopic', models.TextField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Dermatographic', 'Dermatographic')], null=True)),
                ('spt', models.TextField(blank=True, default='', verbose_name='SPT')),
                ('wheal', models.FloatField(blank=True, null=True)),
                ('bronchial_test_num', models.IntegerField(blank=True, null=True)),
                ('date_of_challenge', models.DateField(blank=True, null=True)),
                ('last_exposed', models.DateField(blank=True, null=True)),
                ('duration_exposed', models.CharField(blank=True, max_length=256, null=True)),
                ('result', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('Inconclusive', 'Inconclusive'), ('Irritant reaction', 'Irritant reaction'), ('Positive rhinitis', 'Positive rhinitis'), ('Laryngeal /vocal cord dysfunction', 'Laryngeal /vocal cord dysfunction'), ('coughing', 'coughing'), ('VCD', 'VCD'), ('recreated symptoms', 'recreated symptoms')], max_length=256, null=True)),
                ('response_type', models.CharField(blank=True, choices=[('Dual', 'Dual'), ('Late', 'Late'), ('Early', 'Early'), ('Other', 'Other')], max_length=256, null=True)),
                ('baseline_pc20', models.CharField(blank=True, max_length=256, null=True)),
                ('lowest_pc20', models.CharField(blank=True, max_length=256, null=True)),
                ('neg_control', models.FloatField(blank=True, null=True)),
                ('pos_control', models.FloatField(blank=True, null=True)),
                ('asp_fumigatus', models.FloatField(blank=True, null=True)),
                ('grass_pollen', models.FloatField(blank=True, null=True)),
                ('cat', models.FloatField(blank=True, null=True)),
                ('d_pter', models.FloatField(blank=True, null=True)),
                ('fev_1', models.FloatField(blank=True, null=True)),
                ('fev_1_post_ventolin', models.FloatField(blank=True, null=True)),
                ('fev_1_percentage_predicted', models.IntegerField(blank=True, null=True)),
                ('fvc', models.FloatField(blank=True, null=True)),
                ('fvc_post_ventolin', models.FloatField(blank=True, null=True)),
                ('fvc_percentage_predicted', models.IntegerField(blank=True, null=True)),
                ('ct_chest_scan_date', models.DateField(blank=True, null=True)),
                ('full_lung_function_date', models.DateField(blank=True, null=True)),
                ('substance_ft', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('condition_fk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='opal.Condition')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_rbhl_diagnostictest_subrecords', to=settings.AUTH_USER_MODEL)),
                ('episode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='opal.Episode')),
                ('substance_fk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rbhl.BronchialChallengeSubstance')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_rbhl_diagnostictest_subrecords', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(opal.models.UpdatesFromDictMixin, opal.models.ToDictMixin, models.Model),
        ),
        migrations.AlterUniqueTogether(
            name='bronchialchallengesubstance',
            unique_together={('code', 'system')},
        ),
    ]
